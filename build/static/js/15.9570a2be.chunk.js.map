{"version":3,"sources":["../node_modules/clsx/dist/clsx.m.js","assets/empty-cart.png","containers/cart/Cart.js","containers/template/MetaTag/MetaTag.js","containers/template/RouteTemplate.js"],"names":["toVal","mix","k","y","str","Array","isArray","length","tmp","x","i","arguments","module","exports","TableCell","className","children","align","clsx","Cart","cartData","useSelector","state","cartReducer","dispatch","useDispatch","total","useMemo","reduce","cur","amount","sale_price","useEffect","title","data","name","path","src","NoProduct","map","item","index","key","product_id","style","width","height","url_image_main","Number","toLocaleString","onClick","newValue","changeAmountCart","type","value","onChange","e","target","removeFromCard","flexGrow","padding","price","textAlign","marginTop","marginBottom","MetaTag","seo","description","url","image","meta","property","content","RouteTemplate","Fragment","fontWeight"],"mappings":"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","file":"static/js/15.9570a2be.chunk.js","sourcesContent":["function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","module.exports = __webpack_public_path__ + \"static/media/empty-cart.66ff55e9.png\";","import React, {useEffect, useMemo, useState} from \"react\";\nimport './Cart.css'\nimport {useSelector} from \"react-redux\";\nimport clsx from \"clsx\";\nimport {useDispatch} from 'react-redux'\nimport {changeAmountCart, removeFromCard} from \"../../redux/actions/actions\";\nimport LinkTemplate from \"../template/LinkTemplate\";\nimport SaleItem from \"../template/SaleItem\";\nimport RouteTemplate from \"../template/RouteTemplate\";\nimport BodyTemplate from \"../template/BodyTemplate\";\nimport NoProduct from \"../../assets/empty-cart.png\"\nimport MetaTag from \"../template/MetaTag/MetaTag\";\nexport const TableCell = ({className, children, align}) => {\n    return <td className={clsx(\n        className, 'tc', (align === 'center') && 'tc-center', (align === 'left') && 'tc-left', (align === 'right') && 'tc-right'\n    )}>\n        {children}\n    </td>\n}\n\nexport default function Cart() {\n    const cartData = useSelector(state => state.cartReducer)\n    const dispatch = useDispatch()\n    const total = useMemo(() => {\n        let total = cartData.reduce((total, cur) => {\n            return total + cur.amount * cur.sale_price\n        }, 0)\n        return total\n    }, [cartData])\n    useEffect(() => {\n    }, [])\n    return (\n        <BodyTemplate>\n            <MetaTag title={`Giỏ hàng`} />\n            <RouteTemplate data={\n                [\n                    {\n                        name: \"Trang chủ\",\n                        path: \"/\"\n                    },\n                    {\n                        name: \"Giỏ hàng\",\n                    }\n                ]\n            }/>\n            <div className='cart-container'>\n                <div className='cart-title'>Giỏ hàng</div>\n                <hr className='cart-divider'></hr>\n                {\n                    cartData.length ===0? <div className='cart-image-container'>\n                            <img src={NoProduct} className='cart-image'/>\n                            <p>Không có sản phẩm nào trong giỏ hàng!</p>\n                    </div> :\n                    <div>\n                        <div className='cart-container-desktop'>\n                            <table className='cart-table'>\n                                <tr>\n                                    <TableCell align={'center'} className='cart-table-head'>Ảnh sản phẩm</TableCell>\n                                    <TableCell align={'center'} className='cart-table-head'>Tên sản phẩm</TableCell>\n                                    <TableCell align={'center'} className='cart-table-head'>Đơn giá</TableCell>\n                                    <TableCell align={'center'} className='cart-table-head'>Số lượng</TableCell>\n                                    <TableCell align={'center'} className='cart-table-head'>Thành tiền</TableCell>\n                                    <TableCell align={'center'} className='cart-table-head'>Xóa</TableCell>\n                                </tr>\n                                {\n                                    cartData.map((item, index) => {\n                                        return <tr key={index}>\n                                            <TableCell align={'center'}>\n                                                <LinkTemplate path={`/product/${item.product_id}`}>\n                                                    <img style={{width: '5em', height: '5em'}}\n                                                         src={item.url_image_main}/>\n                                                </LinkTemplate>\n                                            </TableCell>\n                                            <TableCell align={'left'}>{item.name}</TableCell>\n                                            <TableCell\n                                                align={'center'}>{Number(item.sale_price).toLocaleString('en')}</TableCell>\n                                            <TableCell align={'center'}>\n                                                <button className='cart-button-add' onClick={() => {\n                                                    let newValue = Number(item.amount) + 1\n                                                    dispatch(changeAmountCart({\n                                                        product_id: item.product_id,\n                                                        amount: newValue\n                                                    }))\n                                                }}>+\n                                                </button>\n                                                <input className='cart-input-amount' type='number' value={item.amount}\n                                                       onChange={(e) => {\n                                                           if (Number(e.target.value) <= 0) {\n                                                               return\n                                                           }\n                                                           dispatch(changeAmountCart({\n                                                               product_id: item.product_id,\n                                                               amount: Number(e.target.value)\n                                                           }))\n                                                       }}/>\n                                                <button className='cart-button-add' onClick={() => {\n                                                    let newValue = Number(item.amount) - 1\n                                                    if (newValue <= 0) {\n                                                        return\n                                                    }\n                                                    dispatch(changeAmountCart({\n                                                        product_id: item.product_id,\n                                                        amount: newValue\n                                                    }))\n                                                }}>-\n                                                </button>\n                                            </TableCell>\n                                            <TableCell\n                                                align={'center'}>{Number(item.amount * item.sale_price).toLocaleString('en')}</TableCell>\n                                            <TableCell align={'center'}>\n                                                <div className='cart-button-delete' onClick={() => {\n                                                    dispatch(removeFromCard({\n                                                        product_id: item.product_id\n                                                    }))\n                                                }}>\n                                                    <i className=\"far fa-trash-alt\"></i>\n                                                </div>\n                                            </TableCell>\n                                        </tr>\n                                    })\n                                }\n                            </table>\n                            <div className={'cart-table-price-container'}>\n                                <LinkTemplate path='/'>\n                                    <div className='cart-button-more'>Xem thêm mặt hàng</div>\n                                </LinkTemplate>\n                                <div style={{flexGrow: 1}}></div>\n                                <div>\n                                    <table>\n                                        <tr>\n                                            <TableCell align={'left'}>Tạm tính</TableCell>\n                                            <TableCell align={'right'}\n                                                       className={'cart-price'}>{`${Number(total).toLocaleString('en')}đ`}</TableCell>\n                                        </tr>\n                                        <tr>\n                                            <TableCell align={'left'}>Tổng tiền thanh toán</TableCell>\n                                            <TableCell align={'right'}\n                                                       className={'cart-price'}>{`${Number(total).toLocaleString('en')}đ`}</TableCell>\n                                        </tr>\n                                    </table>\n                                    <LinkTemplate path='/thanh-toan'>\n                                        <div className='cart-button-more btn-checkout'>Thanh toán</div>\n                                    </LinkTemplate>\n                                </div>\n                            </div>\n                        </div>\n                        <div className='cart-container-mobile'>\n                            {\n                                cartData.map((item, index) => (\n                                    <div key={index} style={{padding: '0.5em'}}>\n                                        <div className='cart-element-mobile'>\n                                            <SaleItem data={{\n                                                product_id: item.product_id,\n                                                price: item.price,\n                                                sale_price: item.sale_price,\n                                                url_image_main: item.url_image_main,\n                                                name: item.name\n                                            }}/>\n                                            <div className='cart-element-right'>\n                                                <div>\n                                                    <button className='cart-button-add' onClick={() => {\n                                                        let newValue = Number(item.amount) + 1\n                                                        dispatch(changeAmountCart({\n                                                            product_id: item.product_id,\n                                                            amount: newValue\n                                                        }))\n                                                    }}>+\n                                                    </button>\n                                                    <input className='cart-input-amount' type='number'\n                                                           value={item.amount}\n                                                           onChange={(e) => {\n                                                               if (Number(e.target.value) <= 0) {\n                                                                   return\n                                                               }\n                                                               dispatch(changeAmountCart({\n                                                                   product_id: item.product_id,\n                                                                   amount: Number(e.target.value)\n                                                               }))\n                                                           }}/>\n                                                    <button className='cart-button-add' onClick={() => {\n                                                        let newValue = Number(item.amount) - 1\n                                                        if (newValue <= 0) {\n                                                            return\n                                                        }\n                                                        dispatch(changeAmountCart({\n                                                            product_id: item.product_id,\n                                                            amount: newValue\n                                                        }))\n                                                    }}>-\n                                                    </button>\n                                                </div>\n                                                <div className='cart-button-delete delete-mobile' onClick={() => {\n                                                    dispatch(removeFromCard({\n                                                        product_id: item.product_id\n                                                    }))\n                                                }}>\n                                                    <i className=\"far fa-trash-alt\"></i> Xóa\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <hr className='cart-divider card-main'></hr>\n                                    </div>\n                                ))\n                            }\n                            <div style={{textAlign: 'center'}}>Tổng tiền thanh toán</div>\n                            <div style={{textAlign: 'center', marginTop: '0.5em', marginBottom: '0.5em'}}\n                                 className={'cart-price'}>{`${Number(total).toLocaleString('en')}đ`}</div>\n                            <LinkTemplate path='/thanh-toan'>\n                                <div className='cart-button-more btn-checkout'>Thanh toán</div>\n                            </LinkTemplate>\n                            <LinkTemplate path='/'>\n                                <div className='cart-button-more-mobile'>Xem thêm mặt hàng</div>\n                            </LinkTemplate>\n                        </div>\n                    </div>\n                }\n            </div>\n        </BodyTemplate>\n    );\n}","import React from 'react';\nimport {Helmet} from \"react-helmet\";\nimport Logo from '../../../assets/Logo.png'\n\nconst MetaTag = ({title}) => {\n    const seo = {\n        title: title,\n        description:\n            \"Điện máy Việt Nhật chuyên kinh doanh máy thực phẩm, thiết bị nhà bếp, máy nấy phở, máy vặt lông gà, vịt,... với chất lượng tốt nhất và phong cách phục vụ chuyên nghiệp!\",\n        url: \"https://dienmayvietnhat.com/\",\n        image: \"https://shopadmin.s3-ap-southeast-1.amazonaws.com/logo/Logo-share.png\"\n    };\n    return (\n        <Helmet\n            title={seo.title}\n            meta={[\n                {\n                    name: \"description\",\n                    property: \"og:description\",\n                    content: seo.description\n                },\n                {property: \"og:title\", content: seo.title},\n                {property: \"og:url\", content: seo.url},\n                {property: \"og:image\", content: seo.image},\n                {property: \"og:image:type\", content: \"image/png\"},\n                {property: \"twitter:card\", content: \"summary_large_image\"},\n                {property: \"twitter:image:src\", content: seo.image},\n                {property: \"twitter:title\", content: seo.title},\n                {property: \"twitter:description\", content: seo.description}\n            ]}/>\n    )\n        ;\n};\n\nexport default MetaTag;","import React from 'react';\nimport LinkTemplate from \"./LinkTemplate\";\nimport './RouteTemplate.css'\n\nconst RouteTemplate = ({data}) => {\n    return (\n        <p className='product-category'>\n            {\n                data.map((item, index) => {\n                    if (index !== data.length - 1) {\n                        return <React.Fragment>\n                            <LinkTemplate path={`${item.path}`}>\n                        <span className='product-link-c'>\n                            {`${item.name}`}\n                        </span>\n                            </LinkTemplate>\n                            <span className='product-path-divider'>\n                    >\n                </span>\n                        </React.Fragment>\n                    }\n                    else {\n                        return <span className='product-link-c' style={{fontWeight:'bold'}}> {item.name}</span>\n                    }\n                })\n            }\n        </p>\n    );\n};\n\nexport default RouteTemplate;"],"sourceRoot":""}